{"ast":null,"code":"export const getAllTweetsService = async () => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const getUserTweetsService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/user/${id}/tweets`);\n};\nexport const getSingleTweetService = async id => {\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/tweet/${id}`);\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const registerUserService = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user\", {\n    method: \"POST \",\n    headers: {\n      \"Content-type\": \"Aplication/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};\nexport const loginUserService = async _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/login\", {\n    method: \"POST \",\n    headers: {\n      \"Content-type\": \"Aplication/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const getMyUserDataService = async _ref3 => {\n  let {\n    token\n  } = _ref3;\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user\", {\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const getUserDataService = async id => {\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user/${id}\");\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const sendTweetService = async _ref4 => {\n  let {\n    data,\n    token\n  } = _ref4;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`, {\n    method: \"POST\",\n    body: data,\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n  return json.data;\n};\nexport const deleteTweetService = async _ref5 => {\n  let {\n    id,\n    token\n  } = _ref5;\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/tweet/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Authorization: token\n    }\n  });\n  const json = await response.json();\n  if (!response.ok) {\n    throw new Error(json.message);\n  }\n};","map":{"version":3,"names":["getAllTweetsService","response","fetch","process","env","REACT_APP_BACKEND","json","ok","Error","message","data","getUserTweetsService","id","getSingleTweetService","registerUserService","_ref","email","password","method","headers","body","JSON","stringify","loginUserService","_ref2","getMyUserDataService","_ref3","token","Authorization","getUserDataService","sendTweetService","_ref4","deleteTweetService","_ref5"],"sources":["C:/Users/XoÃ¡n/Desktop/front-end/src/services/index.js"],"sourcesContent":["export const getAllTweetsService = async () => {\r\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`);\r\n\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n\r\n  return json.data;\r\n};\r\n\r\nexport const getUserTweetsService = async (id) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_BACKEND}/user/${id}/tweets`\r\n  );\r\n};\r\nexport const getSingleTweetService = async (id) => {\r\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/tweet/${id}`);\r\n\r\n  const json = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n  return json.data;\r\n};\r\n\r\nexport const registerUserService = async ({ email, password }) => {\r\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user\", {\r\n    method: \"POST \",\r\n    headers: {\r\n      \"Content-type\": \"Aplication/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n};\r\n\r\nexport const loginUserService = async ({ email, password }) => {\r\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/login\", {\r\n    method: \"POST \",\r\n    headers: {\r\n      \"Content-type\": \"Aplication/json\",\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n  return json.data;\r\n};\r\n\r\nexport const getMyUserDataService = async ({ token }) => {\r\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user\", {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n\r\n  const json = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n  return json.data;\r\n};\r\n\r\nexport const getUserDataService = async (id) => {\r\n  const response = await fetch(\"${process.env.REACT_APP_BACKEND}/user/${id}\");\r\n  const json = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n  return json.data;\r\n};\r\n\r\nexport const sendTweetService = async ({ data, token }) => {\r\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}`, {\r\n    method: \"POST\",\r\n    body: data,\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n  return json.data;\r\n};\r\n\r\nexport const deleteTweetService = async ({ id, token }) => {\r\n  const response = await fetch(`${process.env.REACT_APP_BACKEND}/tweet/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  });\r\n  const json = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(json.message);\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}