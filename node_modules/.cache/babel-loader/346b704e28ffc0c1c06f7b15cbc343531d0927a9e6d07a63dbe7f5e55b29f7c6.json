{"ast":null,"code":"/* import { useEffect, useState } from \"react\";\r\nimport { getAllTweetsService, getUserTweetsService } from \"../services\";\r\n\r\nconst useTweets = (id) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const loadTweets = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const data = id\r\n          ? await getUserTweetsService(id)\r\n          : getAllTweetsService();\r\n\r\n        setTweets(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTweets();\r\n  }, [id]);\r\n\r\n  const addTweet = (tweet) => {\r\n    setTweets([tweet, ...tweets]);\r\n  };\r\n\r\n  const removeTweet = (id) => {\r\n    setTweets(tweets.filter((tweet) => tweet.id !== id));\r\n  };\r\n  return { tweets, loading, error, addTweet, removeTweet };\r\n};\r\n\r\nexport default useTweets;\r\n */","map":{"version":3,"names":[],"sources":["C:/Users/XoÃ¡n/Desktop/front-end/src/hooks/useTweets.js"],"sourcesContent":["/* import { useEffect, useState } from \"react\";\r\nimport { getAllTweetsService, getUserTweetsService } from \"../services\";\r\n\r\nconst useTweets = (id) => {\r\n  const [tweets, setTweets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const loadTweets = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const data = id\r\n          ? await getUserTweetsService(id)\r\n          : getAllTweetsService();\r\n\r\n        setTweets(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadTweets();\r\n  }, [id]);\r\n\r\n  const addTweet = (tweet) => {\r\n    setTweets([tweet, ...tweets]);\r\n  };\r\n\r\n  const removeTweet = (id) => {\r\n    setTweets(tweets.filter((tweet) => tweet.id !== id));\r\n  };\r\n  return { tweets, loading, error, addTweet, removeTweet };\r\n};\r\n\r\nexport default useTweets;\r\n */\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}